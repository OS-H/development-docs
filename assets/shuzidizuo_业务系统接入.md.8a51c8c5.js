import{_ as a,c as e,o as s,N as n}from"./chunks/framework.b47621f9.js";const I=JSON.parse('{"title":"业务系统接入","description":"","frontmatter":{},"headers":[],"relativePath":"shuzidizuo/业务系统接入.md"}'),t={name:"shuzidizuo/业务系统接入.md"},o=n(`<h1 id="业务系统接入" tabindex="-1">业务系统接入 <a class="header-anchor" href="#业务系统接入" aria-label="Permalink to &quot;业务系统接入&quot;">​</a></h1><p>系统允许不同的业务系统进行接入，并在统一的框架和权限下进行展示。</p><h1 id="通信流程" tabindex="-1">通信流程 <a class="header-anchor" href="#通信流程" aria-label="Permalink to &quot;通信流程&quot;">​</a></h1><p>业务页面和与业务服务需要通过 SSL 加密通信，即通过 https 和 wss 协议通信。平台对业务服务在网络层进行隔离，用户终端无法直接访问。所有信令需要统一经过业务中枢提供的负载均衡 443 端口进行路由。 具体约定如下：<br> 1.子系统在请求前端静态文件时，都要从平台统一的 nginx 请求资源，以便解决跨域问题。<br> 2.由于 http/ws 信令无法在 https 的界面发送，所以所有信令都必须改成 https/wss。<br> 3.业务系统使用自身域名会导致浏览器不信任，信令无法发送，所以需要业务系统首先把信令统一发到平台统一的 nginx 进行反向代理。业务系统需要提供转发路径，格式为 <code>https://域名/\\***\\*/.....</code>。<br> 4.如果业务系统本身使用的也是 wss，其域名也会导致浏览器不信任，所以需要子系统首先把 wss 链接统一发到智联平台统一的 nginx 进行反向代理。子系统需要提供转发路径，这样后端不需要改，但是 wss 的格式需要改成：<code>wss://域名/\\*\\*\\*\\*/.....</code>,其中域名是平台统一的 nginx 的域名。<br> 5.域名需要读取浏览器地址栏的域名。</p><h1 id="统一鉴权" tabindex="-1">统一鉴权 <a class="header-anchor" href="#统一鉴权" aria-label="Permalink to &quot;统一鉴权&quot;">​</a></h1><p>业务页面需要访问的 api 采用基于 jwt 的 token 鉴权方式，token 的生成和续签由业务中枢统一完成。业务应用需要在 https 接口中增加 Authorization 字段来携带 token，在 wss 接口中通过 querystring 参数的方式携带 token，即在 wss 的 url 后面增加 jwt 参数来携带 token。整个鉴权统一由业务中枢的 api 网关完成。</p><p>http 鉴权示例</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">Request URL:https://vue.gza.com/****/department/query</span></span>
<span class="line"><span style="color:#A6ACCD;">Request Method: POST</span></span>
<span class="line"><span style="color:#A6ACCD;">Status Code: 200</span></span>
<span class="line"><span style="color:#A6ACCD;">Remote Address: 10.0.42.12:33039</span></span>
<span class="line"><span style="color:#A6ACCD;">Referrer Policy: strict-origin-when-cross-origin</span></span>
<span class="line"><span style="color:#A6ACCD;">Request Headers</span></span>
<span class="line"><span style="color:#A6ACCD;">Accept: application/json, text/plain, */*</span></span>
<span class="line"><span style="color:#A6ACCD;">Accept-Encoding: gzip, deflate, br</span></span>
<span class="line"><span style="color:#A6ACCD;">Accept-Language: zh-CN,zh;q=0.9</span></span>
<span class="line"><span style="color:#A6ACCD;">Authorization:Bearer eyJhbGciOiJSUzM4NCIsIlR5cGUiOiJKV1QifQ.eyJwYXNzd29yZCI6IjdmMzExOTczOWIyNmFmNzBkZDZiNmYwZDMyY2IxOGVkIiwiaXNEZWxldGVkIjoiMCIsImxvZ2luTmFtZSI6ImdoZiIsInBvc2l0aW9uIjoiNCIsInN1YkRlcGFydG1lbnQiOiLlt6XnqIvmioDmnK_kuK3lv4MiLCJ1c2VyVHlwZSI6IjMiLCJkZXBhcnRtZW50Ijoi5bel56iL5oqA5pyv5Lit5b-DIiwidXNlck5hbWUiOiJnaGYiLCJ1c2VySWQiOjE5MDcyLCJleHAiOjE2Mjk5NTkyMTV9.ffrcioheWj6dz64zZBXVXTRk84_X5qtFoHO6Bg9jhnDmHQMzwYUI1R9xTxybkf0Wv-87IqrCVjqSf_Hdxt7WNPbKN6Y5SSuo40T0A5RHIuyxFyBN9rhw4nwdwZXGRiM_nZICuUHQAF8iamtrfK6OBNkfrY-tZU5I2Y5Xe5wdZ8p1wspTxLyefk241vqMoGRtOiUhtEpBDoJLpUGfWlWIabEx2cqbgFcfbwOuAaiSORL7GKc0MJy70jdIDVrmGIQdkvzYiQf_nRHh_y-pW7TzG03EieErnJ91a4-2oY78V4PnIhmgx0ljbLZqCbxE93jX54PJP9IXLu90Z4FeSctmXA</span></span></code></pre></div><p>其中 Authorization 是用户登入返回的 token，具体获取方法见 <code>window.parent.getSystemToken()</code></p><p>websocket 鉴权示例 <code>wss://域名/****/.....?jwt=mF_9.B5f-4.1JqM</code> 注意：window.parent.getSystemToken()获取的结果由&#39;Bearer &#39;的前缀，wensocket 的 url 参数里需要去掉前面 7 个字符。</p><h1 id="统一-ui" tabindex="-1">统一 UI <a class="header-anchor" href="#统一-ui" aria-label="Permalink to &quot;统一 UI&quot;">​</a></h1><p>所有业务系统页面必须按照统一 UI 规范进行开发,顶部导航栏由平台开发和控制。</p><h1 id="页面嵌入" tabindex="-1">页面嵌入 <a class="header-anchor" href="#页面嵌入" aria-label="Permalink to &quot;页面嵌入&quot;">​</a></h1><p>页面按照统一 UI 规范开发完后，平台将以 iFrame 嵌入的形式集成，业务系统需提供静态资源路径。</p>`,14),i=[o];function p(l,r,c,d,h,u){return s(),e("div",null,i)}const C=a(t,[["render",p]]);export{I as __pageData,C as default};
